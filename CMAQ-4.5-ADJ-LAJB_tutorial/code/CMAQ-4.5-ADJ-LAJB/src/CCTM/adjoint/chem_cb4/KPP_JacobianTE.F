  
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C     
C     The ODE Jacobian of Chemical Model File
C     
C     Generated by KPP-2.1 symbolic chemistry Kinetics PreProcessor
C     (http://www.cs.vt.edu/~asandu/Software/KPP)
C     KPP is distributed under GPL, the general public licence
C     (http://www.gnu.org/copyleft/gpl.html)
C     (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
C     (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
C     With important contributions from:
C     M. Damian, Villanova University, USA
C     R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
C     
C     File                 : CMAQ_CB4_Jacobian.f90
C     Time                 : Tue Apr 18 11:38:47 2006
C     Working directory    : /home/amir/Desktop/KPP/kpp-2.1
C     Equation file        : CMAQ_CB4.kpp
C     Output root filename : CMAQ_CB4
C     
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



      MODULE KPP_JACOBIAN

      USE KPP_PARS
      USE KPP_JACOBIANSP

      IMPLICIT NONE

      CONTAINS


C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C     
C     Jac_SP - the Jacobian of Variables in sparse matrix representation
C     Arguments :
C     V         - Concentrations of variable species (local)
C     F         - Concentrations of fixed species (local)
C     RCT       - Rate constants (local)
C     JVS       - sparse Jacobian of variables
C     
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP ( V, RCT, JVS )

C     V - Concentrations of variable species (local)
      REAL(kind=dp) :: V(KPPNSP)
C     RCT - Rate constants (local)
      REAL(kind=dp) :: RCT(KPPNRCT)
C     JVS - sparse Jacobian of variables
      REAL(kind=dp) :: JVS(LU_NONZERO)


C     Local variables
C     B - Temporary array
      REAL(kind=dp) :: B(160)

C     B(1) = dA(1)/dV(35)
      B(1) = RCT(1)
C     B(2) = dA(2)/dV(32)
      B(2) = RCT(2)
C     B(3) = dA(3)/dV(34)
      B(3) = RCT(3)*V(36)
C     B(4) = dA(3)/dV(36)
      B(4) = RCT(3)*V(34)
C     B(5) = dA(4)/dV(32)
      B(5) = RCT(4)*V(35)
C     B(6) = dA(4)/dV(35)
      B(6) = RCT(4)*V(32)
C     B(7) = dA(5)/dV(32)
      B(7) = RCT(5)*V(35)
C     B(8) = dA(5)/dV(35)
      B(8) = RCT(5)*V(32)
C     B(9) = dA(6)/dV(32)
      B(9) = RCT(6)*V(36)
C     B(10) = dA(6)/dV(36)
      B(10) = RCT(6)*V(32)
C     B(11) = dA(7)/dV(34)
      B(11) = RCT(7)*V(35)
C     B(12) = dA(7)/dV(35)
      B(12) = RCT(7)*V(34)
C     B(13) = dA(8)/dV(34)
      B(13) = RCT(8)
C     B(14) = dA(9)/dV(34)
      B(14) = RCT(9)
C     B(15) = dA(10)/dV(3)
      B(15) = RCT(10)
C     B(17) = dA(11)/dV(3)
      B(17) = RCT(11)
C     B(19) = dA(12)/dV(3)
      B(19) = RCT(12)
C     B(21) = dA(13)/dV(31)
      B(21) = RCT(13)*V(34)
C     B(22) = dA(13)/dV(34)
      B(22) = RCT(13)*V(31)
C     B(23) = dA(14)/dV(30)
      B(23) = RCT(14)*V(34)
C     B(24) = dA(14)/dV(34)
      B(24) = RCT(14)*V(30)
C     B(25) = dA(15)/dV(33)
      B(25) = RCT(15)
C     B(26) = dA(16)/dV(33)
      B(26) = RCT(16)*V(36)
C     B(27) = dA(16)/dV(36)
      B(27) = RCT(16)*V(33)
C     B(28) = dA(17)/dV(33)
      B(28) = RCT(17)*V(35)
C     B(29) = dA(17)/dV(35)
      B(29) = RCT(17)*V(33)
C     B(30) = dA(18)/dV(33)
      B(30) = RCT(18)*V(35)
C     B(31) = dA(18)/dV(35)
      B(31) = RCT(18)*V(33)
C     B(32) = dA(19)/dV(9)
      B(32) = RCT(19)
C     B(34) = dA(20)/dV(9)
      B(34) = RCT(20)
C     B(35) = dA(21)/dV(36)
      B(35) = RCT(21)*2*V(36)
C     B(36) = dA(22)/dV(35)
      B(36) = RCT(22)*V(36)
C     B(37) = dA(22)/dV(36)
      B(37) = RCT(22)*V(35)
C     B(39) = dA(23)/dV(31)
      B(39) = RCT(23)*V(36)
C     B(40) = dA(23)/dV(36)
      B(40) = RCT(23)*V(31)
C     B(41) = dA(24)/dV(11)
      B(41) = RCT(24)
C     B(42) = dA(25)/dV(11)
      B(42) = RCT(25)*V(31)
C     B(43) = dA(25)/dV(31)
      B(43) = RCT(25)*V(11)
C     B(44) = dA(26)/dV(11)
      B(44) = RCT(26)*2*V(11)
C     B(45) = dA(27)/dV(31)
      B(45) = RCT(27)*V(35)
C     B(46) = dA(27)/dV(35)
      B(46) = RCT(27)*V(31)
C     B(47) = dA(28)/dV(14)
      B(47) = RCT(28)*V(31)
C     B(48) = dA(28)/dV(31)
      B(48) = RCT(28)*V(14)
C     B(49) = dA(29)/dV(30)
      B(49) = RCT(29)*V(36)
C     B(50) = dA(29)/dV(36)
      B(50) = RCT(29)*V(30)
C     B(51) = dA(30)/dV(30)
      B(51) = RCT(30)*V(35)
C     B(52) = dA(30)/dV(35)
      B(52) = RCT(30)*V(30)
C     B(53) = dA(31)/dV(12)
      B(53) = RCT(31)
C     B(54) = dA(32)/dV(12)
      B(54) = RCT(32)*V(31)
C     B(55) = dA(32)/dV(31)
      B(55) = RCT(32)*V(12)
C     B(56) = dA(33)/dV(30)
      B(56) = RCT(33)*2*V(30)
C     B(57) = dA(34)/dV(30)
      B(57) = RCT(34)*2*V(30)
C     B(59) = dA(35)/dV(5)
      B(59) = RCT(35)
C     B(60) = dA(36)/dV(5)
      B(60) = RCT(36)*V(31)
C     B(61) = dA(36)/dV(31)
      B(61) = RCT(36)*V(5)
C     B(62) = dA(37)/dV(18)
      B(62) = RCT(37)*V(31)
C     B(63) = dA(37)/dV(31)
      B(63) = RCT(37)*V(18)
C     B(64) = dA(38)/dV(25)
      B(64) = RCT(38)*V(31)
C     B(65) = dA(38)/dV(31)
      B(65) = RCT(38)*V(25)
C     B(66) = dA(39)/dV(25)
      B(66) = RCT(39)
C     B(67) = dA(40)/dV(25)
      B(67) = RCT(40)
C     B(68) = dA(41)/dV(25)
      B(68) = RCT(41)*V(32)
C     B(69) = dA(41)/dV(32)
      B(69) = RCT(41)*V(25)
C     B(70) = dA(42)/dV(25)
      B(70) = RCT(42)*V(33)
C     B(71) = dA(42)/dV(33)
      B(71) = RCT(42)*V(25)
C     B(72) = dA(43)/dV(28)
      B(72) = RCT(43)*V(32)
C     B(73) = dA(43)/dV(32)
      B(73) = RCT(43)*V(28)
C     B(74) = dA(44)/dV(28)
      B(74) = RCT(44)*V(31)
C     B(75) = dA(44)/dV(31)
      B(75) = RCT(44)*V(28)
C     B(76) = dA(45)/dV(28)
      B(76) = RCT(45)*V(33)
C     B(77) = dA(45)/dV(33)
      B(77) = RCT(45)*V(28)
C     B(78) = dA(46)/dV(28)
      B(78) = RCT(46)
C     B(79) = dA(47)/dV(29)
      B(79) = RCT(47)*V(36)
C     B(80) = dA(47)/dV(36)
      B(80) = RCT(47)*V(29)
C     B(81) = dA(48)/dV(29)
      B(81) = RCT(48)*V(35)
C     B(82) = dA(48)/dV(35)
      B(82) = RCT(48)*V(29)
C     B(83) = dA(49)/dV(6)
      B(83) = RCT(49)
C     B(84) = dA(50)/dV(29)
      B(84) = RCT(50)*2*V(29)
C     B(85) = dA(51)/dV(29)
      B(85) = RCT(51)*V(30)
C     B(86) = dA(51)/dV(30)
      B(86) = RCT(51)*V(29)
C     B(87) = dA(52)/dV(31)
      B(87) = RCT(52)
C     B(88) = dA(53)/dV(24)
      B(88) = RCT(53)*V(31)
C     B(89) = dA(53)/dV(31)
      B(89) = RCT(53)*V(24)
C     B(90) = dA(54)/dV(15)
      B(90) = RCT(54)
C     B(91) = dA(55)/dV(15)
      B(91) = RCT(55)
C     B(92) = dA(56)/dV(15)
      B(92) = RCT(56)*V(35)
C     B(93) = dA(56)/dV(35)
      B(93) = RCT(56)*V(15)
C     B(94) = dA(57)/dV(23)
      B(94) = RCT(57)*V(32)
C     B(95) = dA(57)/dV(32)
      B(95) = RCT(57)*V(23)
C     B(96) = dA(58)/dV(23)
      B(96) = RCT(58)*V(31)
C     B(97) = dA(58)/dV(31)
      B(97) = RCT(58)*V(23)
C     B(98) = dA(59)/dV(23)
      B(98) = RCT(59)*V(34)
C     B(99) = dA(59)/dV(34)
      B(99) = RCT(59)*V(23)
C     B(100) = dA(60)/dV(23)
      B(100) = RCT(60)*V(33)
C     B(101) = dA(60)/dV(33)
      B(101) = RCT(60)*V(23)
C     B(102) = dA(61)/dV(19)
      B(102) = RCT(61)*V(32)
C     B(103) = dA(61)/dV(32)
      B(103) = RCT(61)*V(19)
C     B(104) = dA(62)/dV(19)
      B(104) = RCT(62)*V(31)
C     B(105) = dA(62)/dV(31)
      B(105) = RCT(62)*V(19)
C     B(106) = dA(63)/dV(19)
      B(106) = RCT(63)*V(34)
C     B(107) = dA(63)/dV(34)
      B(107) = RCT(63)*V(19)
C     B(108) = dA(64)/dV(8)
      B(108) = RCT(64)*V(31)
C     B(109) = dA(64)/dV(31)
      B(109) = RCT(64)*V(8)
C     B(110) = dA(65)/dV(13)
      B(110) = RCT(65)*V(36)
C     B(111) = dA(65)/dV(36)
      B(111) = RCT(65)*V(13)
C     B(112) = dA(66)/dV(13)
      B(112) = RCT(66)
C     B(113) = dA(67)/dV(16)
      B(113) = RCT(67)*V(31)
C     B(114) = dA(67)/dV(31)
      B(114) = RCT(67)*V(16)
C     B(115) = dA(68)/dV(16)
      B(115) = RCT(68)*V(33)
C     B(116) = dA(68)/dV(33)
      B(116) = RCT(68)*V(16)
C     B(117) = dA(69)/dV(7)
      B(117) = RCT(69)*V(35)
C     B(118) = dA(69)/dV(35)
      B(118) = RCT(69)*V(7)
C     B(119) = dA(70)/dV(10)
      B(119) = RCT(70)*V(31)
C     B(120) = dA(70)/dV(31)
      B(120) = RCT(70)*V(10)
C     B(121) = dA(71)/dV(20)
      B(121) = RCT(71)*V(31)
C     B(122) = dA(71)/dV(31)
      B(122) = RCT(71)*V(20)
C     B(123) = dA(72)/dV(20)
      B(123) = RCT(72)
C     B(124) = dA(73)/dV(20)
      B(124) = RCT(73)*V(34)
C     B(125) = dA(73)/dV(34)
      B(125) = RCT(73)*V(20)
C     B(126) = dA(74)/dV(17)
      B(126) = RCT(74)*V(31)
C     B(127) = dA(74)/dV(31)
      B(127) = RCT(74)*V(17)
C     B(128) = dA(75)/dV(17)
      B(128) = RCT(75)
C     B(129) = dA(76)/dV(26)
      B(129) = RCT(76)*V(32)
C     B(130) = dA(76)/dV(32)
      B(130) = RCT(76)*V(26)
C     B(131) = dA(77)/dV(26)
      B(131) = RCT(77)*V(31)
C     B(132) = dA(77)/dV(31)
      B(132) = RCT(77)*V(26)
C     B(133) = dA(78)/dV(26)
      B(133) = RCT(78)*V(34)
C     B(134) = dA(78)/dV(34)
      B(134) = RCT(78)*V(26)
C     B(135) = dA(79)/dV(26)
      B(135) = RCT(79)*V(33)
C     B(136) = dA(79)/dV(33)
      B(136) = RCT(79)*V(26)
C     B(137) = dA(80)/dV(22)
      B(137) = RCT(80)*V(36)
C     B(138) = dA(80)/dV(36)
      B(138) = RCT(80)*V(22)
C     B(139) = dA(81)/dV(22)
      B(139) = RCT(81)*2*V(22)
C     B(140) = dA(82)/dV(21)
      B(140) = RCT(82)*V(36)
C     B(141) = dA(82)/dV(36)
      B(141) = RCT(82)*V(21)
C     B(142) = dA(83)/dV(4)
      B(142) = RCT(83)*V(31)
C     B(143) = dA(83)/dV(31)
      B(143) = RCT(83)*V(4)
C     B(144) = dA(84)/dV(4)
      B(144) = RCT(84)
C     B(145) = dA(85)/dV(22)
      B(145) = RCT(85)*V(30)
C     B(146) = dA(85)/dV(30)
      B(146) = RCT(85)*V(22)
C     B(147) = dA(86)/dV(21)
      B(147) = RCT(86)*V(30)
C     B(148) = dA(86)/dV(30)
      B(148) = RCT(86)*V(21)
C     B(149) = dA(87)/dV(21)
      B(149) = RCT(87)*2*V(21)
C     B(150) = dA(88)/dV(21)
      B(150) = RCT(88)*V(22)
C     B(151) = dA(88)/dV(22)
      B(151) = RCT(88)*V(21)
C     B(152) = dA(89)/dV(27)
      B(152) = RCT(89)*V(31)
C     B(153) = dA(89)/dV(31)
      B(153) = RCT(89)*V(27)
C     B(154) = dA(90)/dV(27)
      B(154) = RCT(90)*V(34)
C     B(155) = dA(90)/dV(34)
      B(155) = RCT(90)*V(27)
C     B(156) = dA(91)/dV(27)
      B(156) = RCT(91)*V(33)
C     B(157) = dA(91)/dV(33)
      B(157) = RCT(91)*V(27)
C     B(158) = dA(92)/dV(27)
      B(158) = RCT(92)
C     B(159) = dA(93)/dV(26)
      B(159) = RCT(93)*V(35)
C     B(160) = dA(93)/dV(35)
      B(160) = RCT(93)*V(26)

C     Construct the Jacobian terms from B's
C     JVS(1) = Jac_FULL(1,1)
      JVS(1) = 0
C     JVS(2) = Jac_FULL(1,7)
      JVS(2) = B(117)
C     JVS(3) = Jac_FULL(1,13)
      JVS(3) = 0.1*B(110)
C     JVS(4) = Jac_FULL(1,15)
      JVS(4) = B(92)
C     JVS(5) = Jac_FULL(1,21)
      JVS(5) = B(140)
C     JVS(6) = Jac_FULL(1,26)
      JVS(6) = 0.8*B(135)+0.8*B(159)
C     JVS(7) = Jac_FULL(1,27)
      JVS(7) = 0.85*B(156)
C     JVS(8) = Jac_FULL(1,33)
      JVS(8) = 0.8*B(136)+0.85*B(157)
C     JVS(9) = Jac_FULL(1,35)
      JVS(9) = B(93)+B(118)+0.8*B(160)
C     JVS(10) = Jac_FULL(1,36)
      JVS(10) = 0.1*B(111)+B(141)
C     JVS(11) = Jac_FULL(2,2)
      JVS(11) = 0
C     JVS(12) = Jac_FULL(2,4)
      JVS(12) = B(142)+B(144)
C     JVS(13) = Jac_FULL(2,31)
      JVS(13) = B(143)
C     JVS(14) = Jac_FULL(3,3)
      JVS(14) = -B(15)-B(17)-B(19)
C     JVS(15) = Jac_FULL(3,34)
      JVS(15) = B(14)
C     JVS(16) = Jac_FULL(4,4)
      JVS(16) = -B(142)-B(144)
C     JVS(17) = Jac_FULL(4,31)
      JVS(17) = -B(143)
C     JVS(18) = Jac_FULL(5,5)
      JVS(18) = -B(59)-B(60)
C     JVS(19) = Jac_FULL(5,30)
      JVS(19) = B(56)+B(57)
C     JVS(20) = Jac_FULL(5,31)
      JVS(20) = -B(61)
C     JVS(21) = Jac_FULL(6,6)
      JVS(21) = -B(83)
C     JVS(22) = Jac_FULL(6,29)
      JVS(22) = B(81)
C     JVS(23) = Jac_FULL(6,35)
      JVS(23) = B(82)
C     JVS(24) = Jac_FULL(7,7)
      JVS(24) = -B(117)
C     JVS(25) = Jac_FULL(7,16)
      JVS(25) = 0.4*B(113)+B(115)
C     JVS(26) = Jac_FULL(7,31)
      JVS(26) = 0.4*B(114)
C     JVS(27) = Jac_FULL(7,33)
      JVS(27) = B(116)
C     JVS(28) = Jac_FULL(7,35)
      JVS(28) = -B(118)
C     JVS(29) = Jac_FULL(8,8)
      JVS(29) = -B(108)
C     JVS(30) = Jac_FULL(8,31)
      JVS(30) = -B(109)
C     JVS(31) = Jac_FULL(9,9)
      JVS(31) = -B(32)-B(34)
C     JVS(32) = Jac_FULL(9,33)
      JVS(32) = B(30)
C     JVS(33) = Jac_FULL(9,35)
      JVS(33) = B(31)
C     JVS(34) = Jac_FULL(10,10)
      JVS(34) = -B(119)
C     JVS(35) = Jac_FULL(10,31)
      JVS(35) = -B(120)
C     JVS(36) = Jac_FULL(11,11)
      JVS(36) = -B(41)-B(42)-2*B(44)
C     JVS(37) = Jac_FULL(11,31)
      JVS(37) = B(39)-B(43)
C     JVS(38) = Jac_FULL(11,35)
      JVS(38) = 2*B(36)
C     JVS(39) = Jac_FULL(11,36)
      JVS(39) = 2*B(37)+B(40)
C     JVS(40) = Jac_FULL(12,12)
      JVS(40) = -B(53)-B(54)
C     JVS(41) = Jac_FULL(12,30)
      JVS(41) = B(51)
C     JVS(42) = Jac_FULL(12,31)
      JVS(42) = -B(55)
C     JVS(43) = Jac_FULL(12,35)
      JVS(43) = B(52)
C     JVS(44) = Jac_FULL(13,8)
      JVS(44) = 0.56*B(108)
C     JVS(45) = Jac_FULL(13,10)
      JVS(45) = 0.3*B(119)
C     JVS(46) = Jac_FULL(13,13)
      JVS(46) = -B(110)-B(112)
C     JVS(47) = Jac_FULL(13,31)
      JVS(47) = 0.56*B(109)+0.3*B(120)
C     JVS(48) = Jac_FULL(13,36)
      JVS(48) = -B(111)
C     JVS(49) = Jac_FULL(14,9)
      JVS(49) = 2*B(32)
C     JVS(50) = Jac_FULL(14,14)
      JVS(50) = -B(47)
C     JVS(51) = Jac_FULL(14,16)
      JVS(51) = B(115)
C     JVS(52) = Jac_FULL(14,25)
      JVS(52) = B(70)
C     JVS(53) = Jac_FULL(14,27)
      JVS(53) = 0.15*B(156)
C     JVS(54) = Jac_FULL(14,28)
      JVS(54) = B(76)
C     JVS(55) = Jac_FULL(14,31)
      JVS(55) = B(45)-B(48)
C     JVS(56) = Jac_FULL(14,33)
      JVS(56) = B(71)+B(77)+B(116)+0.15*B(157)
C     JVS(57) = Jac_FULL(14,35)
      JVS(57) = B(46)
C     JVS(58) = Jac_FULL(15,15)
      JVS(58) = -0.98*B(90)-B(91)-B(92)
C     JVS(59) = Jac_FULL(15,24)
      JVS(59) = 0.76*B(88)
C     JVS(60) = Jac_FULL(15,31)
      JVS(60) = 0.76*B(89)
C     JVS(61) = Jac_FULL(15,35)
      JVS(61) = -B(93)
C     JVS(62) = Jac_FULL(16,8)
      JVS(62) = 0.36*B(108)
C     JVS(63) = Jac_FULL(16,10)
      JVS(63) = 0.2*B(119)
C     JVS(64) = Jac_FULL(16,13)
      JVS(64) = B(112)
C     JVS(65) = Jac_FULL(16,16)
      JVS(65) = -B(113)-B(115)
C     JVS(66) = Jac_FULL(16,31)
      JVS(66) = 0.36*B(109)-B(114)+0.2*B(120)
C     JVS(67) = Jac_FULL(16,33)
      JVS(67) = -B(116)
C     JVS(68) = Jac_FULL(16,36)
      JVS(68) = 0
C     JVS(69) = Jac_FULL(17,10)
      JVS(69) = 0.8*B(119)
C     JVS(70) = Jac_FULL(17,17)
      JVS(70) = -B(126)-B(128)
C     JVS(71) = Jac_FULL(17,20)
      JVS(71) = 0.2*B(124)
C     JVS(72) = Jac_FULL(17,27)
      JVS(72) = 0.17*B(152)+0.85*B(154)
C     JVS(73) = Jac_FULL(17,31)
      JVS(73) = 0.8*B(120)-B(127)+0.17*B(153)
C     JVS(74) = Jac_FULL(17,34)
      JVS(74) = 0.2*B(125)+0.85*B(155)
C     JVS(75) = Jac_FULL(18,17)
      JVS(75) = B(128)
C     JVS(76) = Jac_FULL(18,18)
      JVS(76) = -B(62)
C     JVS(77) = Jac_FULL(18,19)
      JVS(77) = B(102)+0.42*B(106)
C     JVS(78) = Jac_FULL(18,20)
      JVS(78) = 2*B(121)+B(123)+0.69*B(124)
C     JVS(79) = Jac_FULL(18,23)
      JVS(79) = 0.3*B(94)+0.33*B(98)
C     JVS(80) = Jac_FULL(18,25)
      JVS(80) = B(64)+B(66)+B(67)+B(68)+B(70)
C     JVS(81) = Jac_FULL(18,26)
      JVS(81) = 0.07*B(133)
C     JVS(82) = Jac_FULL(18,27)
      JVS(82) = 0.33*B(152)+0.23*B(154)+0.64*B(156)+0.33*B(158)
C     JVS(83) = Jac_FULL(18,28)
      JVS(83) = B(78)
C     JVS(84) = Jac_FULL(18,31)
      JVS(84) = -B(63)+B(65)+2*B(122)+0.33*B(153)
C     JVS(85) = Jac_FULL(18,32)
      JVS(85) = B(69)+0.3*B(95)+B(103)
C     JVS(86) = Jac_FULL(18,33)
      JVS(86) = B(71)+0.64*B(157)
C     JVS(87) = Jac_FULL(18,34)
      JVS(87) = 0.33*B(99)+0.42*B(107)+0.69*B(125)+0.07*B(134)+0.23*B(155)
C     JVS(88) = Jac_FULL(19,19)
      JVS(88) = -B(102)-B(104)-B(106)
C     JVS(89) = Jac_FULL(19,31)
      JVS(89) = -B(105)
C     JVS(90) = Jac_FULL(19,32)
      JVS(90) = -B(103)
C     JVS(91) = Jac_FULL(19,34)
      JVS(91) = -B(107)
C     JVS(92) = Jac_FULL(20,13)
      JVS(92) = 0.9*B(110)
C     JVS(93) = Jac_FULL(20,16)
      JVS(93) = 0.3*B(113)
C     JVS(94) = Jac_FULL(20,20)
      JVS(94) = -B(121)-B(123)-B(124)
C     JVS(95) = Jac_FULL(20,31)
      JVS(95) = 0.3*B(114)-B(122)
C     JVS(96) = Jac_FULL(20,33)
      JVS(96) = 0
C     JVS(97) = Jac_FULL(20,34)
      JVS(97) = -B(125)
C     JVS(98) = Jac_FULL(20,36)
      JVS(98) = 0.9*B(111)
C     JVS(99) = Jac_FULL(21,15)
      JVS(99) = 0.04*B(90)
C     JVS(100) = Jac_FULL(21,21)
      JVS(100) = -B(140)-B(147)-2*B(149)-B(150)
C     JVS(101) = Jac_FULL(21,22)
      JVS(101) = -B(151)
C     JVS(102) = Jac_FULL(21,23)
      JVS(102) = 0.02*B(94)+0.09*B(100)
C     JVS(103) = Jac_FULL(21,24)
      JVS(103) = 0.13*B(88)
C     JVS(104) = Jac_FULL(21,26)
      JVS(104) = 0.09*B(131)
C     JVS(105) = Jac_FULL(21,30)
      JVS(105) = -B(148)
C     JVS(106) = Jac_FULL(21,31)
      JVS(106) = 0.13*B(89)+0.09*B(132)
C     JVS(107) = Jac_FULL(21,32)
      JVS(107) = 0.02*B(95)
C     JVS(108) = Jac_FULL(21,33)
      JVS(108) = 0.09*B(101)
C     JVS(109) = Jac_FULL(21,35)
      JVS(109) = 0
C     JVS(110) = Jac_FULL(21,36)
      JVS(110) = -B(141)
C     JVS(111) = Jac_FULL(22,8)
      JVS(111) = 0.08*B(108)
C     JVS(112) = Jac_FULL(22,10)
      JVS(112) = 0.5*B(119)
C     JVS(113) = Jac_FULL(22,15)
      JVS(113) = 0.96*B(90)
C     JVS(114) = Jac_FULL(22,16)
      JVS(114) = 0.6*B(113)
C     JVS(115) = Jac_FULL(22,17)
      JVS(115) = B(126)
C     JVS(116) = Jac_FULL(22,19)
      JVS(116) = 0.7*B(102)+B(104)
C     JVS(117) = Jac_FULL(22,20)
      JVS(117) = B(121)+0.03*B(124)
C     JVS(118) = Jac_FULL(22,21)
      JVS(118) = -B(150)
C     JVS(119) = Jac_FULL(22,22)
      JVS(119) = -B(137)-2*B(139)-B(145)-B(151)
C     JVS(120) = Jac_FULL(22,23)
      JVS(120) = 0.28*B(94)+B(96)+0.22*B(98)+0.91*B(100)
C     JVS(121) = Jac_FULL(22,24)
      JVS(121) = 0.87*B(88)
C     JVS(122) = Jac_FULL(22,26)
      JVS(122) = 0.25*B(129)+0.99*B(131)+0.2*B(133)+B(135)+B(159)
C     JVS(123) = Jac_FULL(22,27)
      JVS(123) = 0.71*B(152)+0.06*B(154)+0.08*B(156)+0.7*B(158)
C     JVS(124) = Jac_FULL(22,28)
      JVS(124) = B(78)
C     JVS(125) = Jac_FULL(22,29)
      JVS(125) = B(79)+2*B(84)+0.79*B(85)
C     JVS(126) = Jac_FULL(22,30)
      JVS(126) = 0.79*B(86)-B(146)
C     JVS(127) = Jac_FULL(22,31)
      JVS(127) = B(87)+0.87*B(89)+B(97)+B(105)+0.08*B(109)+0.6*B(114)+0.5*B(120)+B(122)+B(127)+0.99*B(132)+0.71*B(153)
C     JVS(128) = Jac_FULL(22,32)
      JVS(128) = 0.28*B(95)+0.7*B(103)+0.25*B(130)
C     JVS(129) = Jac_FULL(22,33)
      JVS(129) = 0.91*B(101)+B(136)+0.08*B(157)
C     JVS(130) = Jac_FULL(22,34)
      JVS(130) = 0.22*B(99)+0.03*B(125)+0.2*B(134)+0.06*B(155)
C     JVS(131) = Jac_FULL(22,35)
      JVS(131) = B(160)
C     JVS(132) = Jac_FULL(22,36)
      JVS(132) = B(80)-B(138)
C     JVS(133) = Jac_FULL(23,23)
      JVS(133) = -B(94)-B(96)-B(98)-B(100)
C     JVS(134) = Jac_FULL(23,31)
      JVS(134) = -B(97)
C     JVS(135) = Jac_FULL(23,32)
      JVS(135) = -B(95)
C     JVS(136) = Jac_FULL(23,33)
      JVS(136) = -B(101)
C     JVS(137) = Jac_FULL(23,34)
      JVS(137) = -B(99)
C     JVS(138) = Jac_FULL(24,10)
      JVS(138) = 1.1*B(119)
C     JVS(139) = Jac_FULL(24,15)
      JVS(139) = -2.1*B(90)
C     JVS(140) = Jac_FULL(24,23)
      JVS(140) = 0.22*B(94)-B(96)-B(98)-B(100)
C     JVS(141) = Jac_FULL(24,24)
      JVS(141) = -1.11*B(88)
C     JVS(142) = Jac_FULL(24,26)
      JVS(142) = 0.25*B(129)+0.35*B(133)+2.4*B(135)+2.4*B(159)
C     JVS(143) = Jac_FULL(24,27)
      JVS(143) = 1.57*B(152)+0.36*B(154)+1.28*B(156)+0.83*B(158)
C     JVS(144) = Jac_FULL(24,31)
      JVS(144) = -1.11*B(89)-B(97)+1.1*B(120)+1.57*B(153)
C     JVS(145) = Jac_FULL(24,32)
      JVS(145) = 0.22*B(95)+0.25*B(130)
C     JVS(146) = Jac_FULL(24,33)
      JVS(146) = -B(101)+2.4*B(136)+1.28*B(157)
C     JVS(147) = Jac_FULL(24,34)
      JVS(147) = -B(99)+0.35*B(134)+0.36*B(155)
C     JVS(148) = Jac_FULL(24,35)
      JVS(148) = 2.4*B(160)
C     JVS(149) = Jac_FULL(25,19)
      JVS(149) = B(102)+1.56*B(104)+B(106)
C     JVS(150) = Jac_FULL(25,20)
      JVS(150) = B(121)+0.7*B(124)
C     JVS(151) = Jac_FULL(25,23)
      JVS(151) = 0.2*B(94)+B(96)+0.74*B(98)+B(100)
C     JVS(152) = Jac_FULL(25,25)
      JVS(152) = -B(64)-B(66)-B(67)-B(68)-B(70)
C     JVS(153) = Jac_FULL(25,26)
      JVS(153) = 0.5*B(129)+0.63*B(131)+0.6*B(133)
C     JVS(154) = Jac_FULL(25,27)
      JVS(154) = 0.17*B(152)+0.15*B(154)+0.28*B(156)+0.9*B(158)
C     JVS(155) = Jac_FULL(25,28)
      JVS(155) = B(78)
C     JVS(156) = Jac_FULL(25,29)
      JVS(156) = B(79)+2*B(84)+0.79*B(85)
C     JVS(157) = Jac_FULL(25,30)
      JVS(157) = 0.79*B(86)
C     JVS(158) = Jac_FULL(25,31)
      JVS(158) = -B(65)+B(87)+B(97)+1.56*B(105)+B(122)+0.63*B(132)+0.17*B(153)
C     JVS(159) = Jac_FULL(25,32)
      JVS(159) = -B(69)+0.2*B(95)+B(103)+0.5*B(130)
C     JVS(160) = Jac_FULL(25,33)
      JVS(160) = -B(71)+B(101)+0.28*B(157)
C     JVS(161) = Jac_FULL(25,34)
      JVS(161) = 0.74*B(99)+B(107)+0.7*B(125)+0.6*B(134)+0.15*B(155)
C     JVS(162) = Jac_FULL(25,36)
      JVS(162) = B(80)
C     JVS(163) = Jac_FULL(26,26)
      JVS(163) = -B(129)-B(131)-B(133)-B(135)-B(159)
C     JVS(164) = Jac_FULL(26,31)
      JVS(164) = -B(132)
C     JVS(165) = Jac_FULL(26,32)
      JVS(165) = -B(130)
C     JVS(166) = Jac_FULL(26,33)
      JVS(166) = -B(136)
C     JVS(167) = Jac_FULL(26,34)
      JVS(167) = -B(134)
C     JVS(168) = Jac_FULL(26,35)
      JVS(168) = -B(160)
C     JVS(169) = Jac_FULL(27,26)
      JVS(169) = 0.75*B(129)+0.91*B(131)+0.65*B(133)+0.2*B(135)+0.2*B(159)
C     JVS(170) = Jac_FULL(27,27)
      JVS(170) = -B(152)-B(154)-B(156)-B(158)
C     JVS(171) = Jac_FULL(27,31)
      JVS(171) = 0.91*B(132)-B(153)
C     JVS(172) = Jac_FULL(27,32)
      JVS(172) = 0.75*B(130)
C     JVS(173) = Jac_FULL(27,33)
      JVS(173) = 0.2*B(136)-B(157)
C     JVS(174) = Jac_FULL(27,34)
      JVS(174) = 0.65*B(134)-B(155)
C     JVS(175) = Jac_FULL(27,35)
      JVS(175) = 0.2*B(160)
C     JVS(176) = Jac_FULL(28,15)
      JVS(176) = 1.1*B(90)
C     JVS(177) = Jac_FULL(28,19)
      JVS(177) = 0.22*B(104)
C     JVS(178) = Jac_FULL(28,20)
      JVS(178) = 0.03*B(124)
C     JVS(179) = Jac_FULL(28,23)
      JVS(179) = 0.63*B(94)+B(96)+0.5*B(98)+B(100)
C     JVS(180) = Jac_FULL(28,24)
      JVS(180) = 0.11*B(88)
C     JVS(181) = Jac_FULL(28,26)
      JVS(181) = 0.15*B(133)+0.8*B(135)+0.8*B(159)
C     JVS(182) = Jac_FULL(28,27)
      JVS(182) = 0.27*B(152)+0.02*B(154)+0.36*B(156)+0.07*B(158)
C     JVS(183) = Jac_FULL(28,28)
      JVS(183) = -B(72)-B(74)-B(76)-B(78)
C     JVS(184) = Jac_FULL(28,31)
      JVS(184) = -B(75)+0.11*B(89)+B(97)+0.22*B(105)+0.27*B(153)
C     JVS(185) = Jac_FULL(28,32)
      JVS(185) = -B(73)+0.63*B(95)
C     JVS(186) = Jac_FULL(28,33)
      JVS(186) = -B(77)+B(101)+0.8*B(136)+0.36*B(157)
C     JVS(187) = Jac_FULL(28,34)
      JVS(187) = 0.5*B(99)+0.03*B(125)+0.15*B(134)+0.02*B(155)
C     JVS(188) = Jac_FULL(28,35)
      JVS(188) = 0.8*B(160)
C     JVS(189) = Jac_FULL(28,36)
      JVS(189) = 0
C     JVS(190) = Jac_FULL(29,6)
      JVS(190) = B(83)
C     JVS(191) = Jac_FULL(29,17)
      JVS(191) = B(126)+B(128)
C     JVS(192) = Jac_FULL(29,20)
      JVS(192) = B(121)+B(123)+0.62*B(124)
C     JVS(193) = Jac_FULL(29,26)
      JVS(193) = 0.25*B(129)+0.2*B(133)
C     JVS(194) = Jac_FULL(29,27)
      JVS(194) = 0.5*B(152)+0.11*B(154)+0.08*B(156)+0.97*B(158)
C     JVS(195) = Jac_FULL(29,28)
      JVS(195) = B(72)+B(74)+B(76)
C     JVS(196) = Jac_FULL(29,29)
      JVS(196) = -B(79)-B(81)-2*B(84)-B(85)
C     JVS(197) = Jac_FULL(29,30)
      JVS(197) = -B(86)
C     JVS(198) = Jac_FULL(29,31)
      JVS(198) = B(75)+B(122)+B(127)+0.5*B(153)
C     JVS(199) = Jac_FULL(29,32)
      JVS(199) = B(73)+0.25*B(130)
C     JVS(200) = Jac_FULL(29,33)
      JVS(200) = B(77)+0.08*B(157)
C     JVS(201) = Jac_FULL(29,34)
      JVS(201) = 0.62*B(125)+0.2*B(134)+0.11*B(155)
C     JVS(202) = Jac_FULL(29,35)
      JVS(202) = -B(82)
C     JVS(203) = Jac_FULL(29,36)
      JVS(203) = -B(80)
C     JVS(204) = Jac_FULL(30,4)
      JVS(204) = B(142)
C     JVS(205) = Jac_FULL(30,5)
      JVS(205) = B(60)
C     JVS(206) = Jac_FULL(30,8)
      JVS(206) = 0.44*B(108)
C     JVS(207) = Jac_FULL(30,10)
      JVS(207) = 0.7*B(119)
C     JVS(208) = Jac_FULL(30,12)
      JVS(208) = B(53)
C     JVS(209) = Jac_FULL(30,13)
      JVS(209) = 0.9*B(110)+B(112)
C     JVS(210) = Jac_FULL(30,15)
      JVS(210) = 0.94*B(90)+B(91)
C     JVS(211) = Jac_FULL(30,16)
      JVS(211) = 0.6*B(113)
C     JVS(212) = Jac_FULL(30,17)
      JVS(212) = B(128)
C     JVS(213) = Jac_FULL(30,18)
      JVS(213) = B(62)
C     JVS(214) = Jac_FULL(30,19)
      JVS(214) = 1.7*B(102)+B(104)+0.12*B(106)
C     JVS(215) = Jac_FULL(30,20)
      JVS(215) = 2*B(121)+B(123)+0.76*B(124)
C     JVS(216) = Jac_FULL(30,21)
      JVS(216) = -B(147)
C     JVS(217) = Jac_FULL(30,22)
      JVS(217) = -B(145)
C     JVS(218) = Jac_FULL(30,23)
      JVS(218) = 0.38*B(94)+B(96)+0.44*B(98)
C     JVS(219) = Jac_FULL(30,24)
      JVS(219) = 0.11*B(88)
C     JVS(220) = Jac_FULL(30,25)
      JVS(220) = B(64)+2*B(66)+B(68)+B(70)
C     JVS(221) = Jac_FULL(30,26)
      JVS(221) = 0.25*B(129)+0.91*B(131)+0.07*B(133)+0.8*B(135)+0.8*B(159)
C     JVS(222) = Jac_FULL(30,27)
      JVS(222) = 0.5*B(152)+0.15*B(154)+0.93*B(156)+1.03*B(158)
C     JVS(223) = Jac_FULL(30,28)
      JVS(223) = 2*B(78)
C     JVS(224) = Jac_FULL(30,29)
      JVS(224) = B(79)+2*B(84)-0.21*B(85)
C     JVS(225) = Jac_FULL(30,30)
      JVS(225) = -B(23)-B(49)-B(51)-2*B(56)-2*B(57)-0.21*B(86)-B(146)-B(148)
C     JVS(226) = Jac_FULL(30,31)
      JVS(226) = B(21)+B(61)+B(63)+B(65)+B(87)+0.11*B(89)+B(97)+B(105)+0.44*B(109)+0.6*B(114)+0.7*B(120)+2*B(122)+0.91 
     &     *B(132)+B(143)+0.5*B(153)
C     JVS(227) = Jac_FULL(30,32)
      JVS(227) = B(69)+0.38*B(95)+1.7*B(103)+0.25*B(130)
C     JVS(228) = Jac_FULL(30,33)
      JVS(228) = B(71)+0.8*B(136)+0.93*B(157)
C     JVS(229) = Jac_FULL(30,34)
      JVS(229) = B(22)-B(24)+0.44*B(99)+0.12*B(107)+0.76*B(125)+0.07*B(134)+0.15*B(155)
C     JVS(230) = Jac_FULL(30,35)
      JVS(230) = -B(52)+0.8*B(160)
C     JVS(231) = Jac_FULL(30,36)
      JVS(231) = -B(50)+B(80)+0.9*B(111)
C     JVS(232) = Jac_FULL(31,3)
      JVS(232) = 2*B(19)
C     JVS(233) = Jac_FULL(31,4)
      JVS(233) = -B(142)
C     JVS(234) = Jac_FULL(31,5)
      JVS(234) = 2*B(59)-B(60)
C     JVS(235) = Jac_FULL(31,8)
      JVS(235) = -B(108)
C     JVS(236) = Jac_FULL(31,10)
      JVS(236) = -B(119)
C     JVS(237) = Jac_FULL(31,11)
      JVS(237) = B(41)-B(42)
C     JVS(238) = Jac_FULL(31,12)
      JVS(238) = -B(54)
C     JVS(239) = Jac_FULL(31,14)
      JVS(239) = -B(47)
C     JVS(240) = Jac_FULL(31,16)
      JVS(240) = -B(113)
C     JVS(241) = Jac_FULL(31,17)
      JVS(241) = -B(126)
C     JVS(242) = Jac_FULL(31,18)
      JVS(242) = -B(62)
C     JVS(243) = Jac_FULL(31,19)
      JVS(243) = 0.3*B(102)-B(104)
C     JVS(244) = Jac_FULL(31,20)
      JVS(244) = -B(121)+0.08*B(124)
C     JVS(245) = Jac_FULL(31,23)
      JVS(245) = 0.2*B(94)-B(96)+0.1*B(98)
C     JVS(246) = Jac_FULL(31,24)
      JVS(246) = -B(88)
C     JVS(247) = Jac_FULL(31,25)
      JVS(247) = -B(64)+B(68)
C     JVS(248) = Jac_FULL(31,26)
      JVS(248) = -B(131)+0.27*B(133)
C     JVS(249) = Jac_FULL(31,27)
      JVS(249) = -B(152)+0.27*B(154)
C     JVS(250) = Jac_FULL(31,28)
      JVS(250) = B(72)-B(74)
C     JVS(251) = Jac_FULL(31,29)
      JVS(251) = 0.79*B(85)
C     JVS(252) = Jac_FULL(31,30)
      JVS(252) = B(23)+B(49)+0.79*B(86)
C     JVS(253) = Jac_FULL(31,31)
      JVS(253) = -B(21)-B(39)-B(43)-B(45)-B(48)-B(55)-B(61)-B(63)-B(65)-B(75)-B(87)-B(89)-B(97)-B(105)-B(109)-B(114)-B(120) 
     &     -B(122)-B(127)-B(132)-B(143)-B(153)
C     JVS(254) = Jac_FULL(31,32)
      JVS(254) = B(69)+B(73)+0.2*B(95)+0.3*B(103)
C     JVS(255) = Jac_FULL(31,33)
      JVS(255) = 0
C     JVS(256) = Jac_FULL(31,34)
      JVS(256) = -B(22)+B(24)+0.1*B(99)+0.08*B(125)+0.27*B(134)+0.27*B(155)
C     JVS(257) = Jac_FULL(31,35)
      JVS(257) = -B(46)
C     JVS(258) = Jac_FULL(31,36)
      JVS(258) = -B(40)+B(50)
C     JVS(259) = Jac_FULL(32,3)
      JVS(259) = B(15)+B(17)
C     JVS(260) = Jac_FULL(32,19)
      JVS(260) = -B(102)
C     JVS(261) = Jac_FULL(32,23)
      JVS(261) = -B(94)
C     JVS(262) = Jac_FULL(32,25)
      JVS(262) = -B(68)
C     JVS(263) = Jac_FULL(32,26)
      JVS(263) = -B(129)
C     JVS(264) = Jac_FULL(32,27)
      JVS(264) = 0
C     JVS(265) = Jac_FULL(32,28)
      JVS(265) = -B(72)
C     JVS(266) = Jac_FULL(32,29)
      JVS(266) = 0
C     JVS(267) = Jac_FULL(32,30)
      JVS(267) = 0
C     JVS(268) = Jac_FULL(32,31)
      JVS(268) = 0
C     JVS(269) = Jac_FULL(32,32)
      JVS(269) = -B(2)-B(5)-B(7)-B(9)-B(69)-B(73)-B(95)-B(103)-B(130)
C     JVS(270) = Jac_FULL(32,33)
      JVS(270) = 0.89*B(25)
C     JVS(271) = Jac_FULL(32,34)
      JVS(271) = B(13)
C     JVS(272) = Jac_FULL(32,35)
      JVS(272) = B(1)-B(6)-B(8)
C     JVS(273) = Jac_FULL(32,36)
      JVS(273) = -B(10)
C     JVS(274) = Jac_FULL(33,9)
      JVS(274) = B(34)
C     JVS(275) = Jac_FULL(33,14)
      JVS(275) = B(47)
C     JVS(276) = Jac_FULL(33,16)
      JVS(276) = -B(115)
C     JVS(277) = Jac_FULL(33,23)
      JVS(277) = -B(100)
C     JVS(278) = Jac_FULL(33,25)
      JVS(278) = -B(70)
C     JVS(279) = Jac_FULL(33,26)
      JVS(279) = -B(135)
C     JVS(280) = Jac_FULL(33,27)
      JVS(280) = -B(156)
C     JVS(281) = Jac_FULL(33,28)
      JVS(281) = -B(76)
C     JVS(282) = Jac_FULL(33,29)
      JVS(282) = 0
C     JVS(283) = Jac_FULL(33,30)
      JVS(283) = 0
C     JVS(284) = Jac_FULL(33,31)
      JVS(284) = B(48)
C     JVS(285) = Jac_FULL(33,32)
      JVS(285) = B(7)
C     JVS(286) = Jac_FULL(33,33)
      JVS(286) = -B(25)-B(26)-B(28)-B(30)-B(71)-B(77)-B(101)-B(116)-B(136)-B(157)
C     JVS(287) = Jac_FULL(33,34)
      JVS(287) = B(11)
C     JVS(288) = Jac_FULL(33,35)
      JVS(288) = B(8)+B(12)-B(29)-B(31)
C     JVS(289) = Jac_FULL(33,36)
      JVS(289) = -B(27)
C     JVS(290) = Jac_FULL(34,19)
      JVS(290) = -B(106)
C     JVS(291) = Jac_FULL(34,20)
      JVS(291) = -B(124)
C     JVS(292) = Jac_FULL(34,23)
      JVS(292) = -B(98)
C     JVS(293) = Jac_FULL(34,26)
      JVS(293) = -B(133)
C     JVS(294) = Jac_FULL(34,27)
      JVS(294) = -B(154)
C     JVS(295) = Jac_FULL(34,30)
      JVS(295) = -B(23)
C     JVS(296) = Jac_FULL(34,31)
      JVS(296) = -B(21)
C     JVS(297) = Jac_FULL(34,32)
      JVS(297) = B(2)
C     JVS(298) = Jac_FULL(34,33)
      JVS(298) = 0
C     JVS(299) = Jac_FULL(34,34)
      JVS(299) = -B(3)-B(11)-B(13)-B(14)-B(22)-B(24)-B(99)-B(107)-B(125)-B(134)-B(155)
C     JVS(300) = Jac_FULL(34,35)
      JVS(300) = -B(12)
C     JVS(301) = Jac_FULL(34,36)
      JVS(301) = -B(4)
C     JVS(302) = Jac_FULL(35,6)
      JVS(302) = B(83)
C     JVS(303) = Jac_FULL(35,7)
      JVS(303) = -B(117)
C     JVS(304) = Jac_FULL(35,9)
      JVS(304) = B(34)
C     JVS(305) = Jac_FULL(35,11)
      JVS(305) = B(42)+B(44)
C     JVS(306) = Jac_FULL(35,12)
      JVS(306) = B(53)+B(54)
C     JVS(307) = Jac_FULL(35,13)
      JVS(307) = 0.9*B(110)
C     JVS(308) = Jac_FULL(35,15)
      JVS(308) = -B(92)
C     JVS(309) = Jac_FULL(35,16)
      JVS(309) = 0
C     JVS(310) = Jac_FULL(35,22)
      JVS(310) = B(137)
C     JVS(311) = Jac_FULL(35,23)
      JVS(311) = B(100)
C     JVS(312) = Jac_FULL(35,24)
      JVS(312) = 0
C     JVS(313) = Jac_FULL(35,26)
      JVS(313) = 0.2*B(135)-B(159)
C     JVS(314) = Jac_FULL(35,27)
      JVS(314) = 0
C     JVS(315) = Jac_FULL(35,28)
      JVS(315) = 0
C     JVS(316) = Jac_FULL(35,29)
      JVS(316) = B(79)-B(81)
C     JVS(317) = Jac_FULL(35,30)
      JVS(317) = B(49)-B(51)
C     JVS(318) = Jac_FULL(35,31)
      JVS(318) = B(43)-B(45)+B(55)
C     JVS(319) = Jac_FULL(35,32)
      JVS(319) = -B(5)-B(7)+B(9)
C     JVS(320) = Jac_FULL(35,33)
      JVS(320) = 0.89*B(25)+2*B(26)-B(30)+B(101)+0.2*B(136)
C     JVS(321) = Jac_FULL(35,34)
      JVS(321) = B(3)-B(11)
C     JVS(322) = Jac_FULL(35,35)
      JVS(322) = -B(1)-B(6)-B(8)-B(12)-B(31)-B(36)-B(46)-B(52)-B(82)-B(93)-B(118)-B(160)
C     JVS(323) = Jac_FULL(35,36)
      JVS(323) = B(4)+B(10)+2*B(27)+2*B(35)-B(37)+B(50)+B(80)+0.9*B(111)+B(138)
C     JVS(324) = Jac_FULL(36,11)
      JVS(324) = B(41)+B(44)
C     JVS(325) = Jac_FULL(36,13)
      JVS(325) = -B(110)
C     JVS(326) = Jac_FULL(36,21)
      JVS(326) = -B(140)
C     JVS(327) = Jac_FULL(36,22)
      JVS(327) = -B(137)
C     JVS(328) = Jac_FULL(36,23)
      JVS(328) = 0
C     JVS(329) = Jac_FULL(36,24)
      JVS(329) = 0
C     JVS(330) = Jac_FULL(36,26)
      JVS(330) = 0.2*B(159)
C     JVS(331) = Jac_FULL(36,27)
      JVS(331) = 0
C     JVS(332) = Jac_FULL(36,28)
      JVS(332) = 0
C     JVS(333) = Jac_FULL(36,29)
      JVS(333) = -B(79)
C     JVS(334) = Jac_FULL(36,30)
      JVS(334) = -B(49)
C     JVS(335) = Jac_FULL(36,31)
      JVS(335) = -B(39)
C     JVS(336) = Jac_FULL(36,32)
      JVS(336) = B(5)-B(9)
C     JVS(337) = Jac_FULL(36,33)
      JVS(337) = 0.11*B(25)-B(26)+B(28)
C     JVS(338) = Jac_FULL(36,34)
      JVS(338) = -B(3)
C     JVS(339) = Jac_FULL(36,35)
      JVS(339) = B(1)+B(6)+B(29)-B(36)+0.2*B(160)
C     JVS(340) = Jac_FULL(36,36)
      JVS(340) = -B(4)-B(10)-B(27)-2*B(35)-B(37)-B(40)-B(50)-B(80)-B(111)-B(138)-B(141)
      
      END SUBROUTINE Jac_SP

C     End of Jac_SP function
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C     
C     Jac_SP_Vec - function for sparse multiplication: sparse Jacobian times vector
C     Arguments :
C     JVS       - sparse Jacobian of variables
C     UV        - User vector for variables
C     JUV       - Jacobian times user vector
C     
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )

C     JVS - sparse Jacobian of variables
      REAL(kind=dp) :: JVS(LU_NONZERO)
C     UV - User vector for variables
      REAL(kind=dp) :: UV(KPPNSP)
C     JUV - Jacobian times user vector
      REAL(kind=dp) :: JUV(KPPNSP)

      JUV(1) = JVS(1)*UV(1)+JVS(2)*UV(7)+JVS(3)*UV(13)+JVS(4)*UV(15)+JVS(5)*UV(21)+JVS(6)*UV(26)+JVS(7)*UV(27)+JVS(8)*UV(33) 
     &     +JVS(9)*UV(35)+JVS(10)*UV(36)
      JUV(2) = JVS(11)*UV(2)+JVS(12)*UV(4)+JVS(13)*UV(31)
      JUV(3) = JVS(14)*UV(3)+JVS(15)*UV(34)
      JUV(4) = JVS(16)*UV(4)+JVS(17)*UV(31)
      JUV(5) = JVS(18)*UV(5)+JVS(19)*UV(30)+JVS(20)*UV(31)
      JUV(6) = JVS(21)*UV(6)+JVS(22)*UV(29)+JVS(23)*UV(35)
      JUV(7) = JVS(24)*UV(7)+JVS(25)*UV(16)+JVS(26)*UV(31)+JVS(27)*UV(33)+JVS(28)*UV(35)
      JUV(8) = JVS(29)*UV(8)+JVS(30)*UV(31)
      JUV(9) = JVS(31)*UV(9)+JVS(32)*UV(33)+JVS(33)*UV(35)
      JUV(10) = JVS(34)*UV(10)+JVS(35)*UV(31)
      JUV(11) = JVS(36)*UV(11)+JVS(37)*UV(31)+JVS(38)*UV(35)+JVS(39)*UV(36)
      JUV(12) = JVS(40)*UV(12)+JVS(41)*UV(30)+JVS(42)*UV(31)+JVS(43)*UV(35)
      JUV(13) = JVS(44)*UV(8)+JVS(45)*UV(10)+JVS(46)*UV(13)+JVS(47)*UV(31)+JVS(48)*UV(36)
      JUV(14) = JVS(49)*UV(9)+JVS(50)*UV(14)+JVS(51)*UV(16)+JVS(52)*UV(25)+JVS(53)*UV(27)+JVS(54)*UV(28)+JVS(55)*UV(31) 
     &     +JVS(56)*UV(33)+JVS(57)*UV(35)
      JUV(15) = JVS(58)*UV(15)+JVS(59)*UV(24)+JVS(60)*UV(31)+JVS(61)*UV(35)
      JUV(16) = JVS(62)*UV(8)+JVS(63)*UV(10)+JVS(64)*UV(13)+JVS(65)*UV(16)+JVS(66)*UV(31)+JVS(67)*UV(33)
      JUV(17) = JVS(69)*UV(10)+JVS(70)*UV(17)+JVS(71)*UV(20)+JVS(72)*UV(27)+JVS(73)*UV(31)+JVS(74)*UV(34)
      JUV(18) = JVS(75)*UV(17)+JVS(76)*UV(18)+JVS(77)*UV(19)+JVS(78)*UV(20)+JVS(79)*UV(23)+JVS(80)*UV(25)+JVS(81)*UV(26) 
     &     +JVS(82)*UV(27)+JVS(83)*UV(28)+JVS(84)*UV(31)+JVS(85)*UV(32)+JVS(86)*UV(33)+JVS(87)*UV(34)
      JUV(19) = JVS(88)*UV(19)+JVS(89)*UV(31)+JVS(90)*UV(32)+JVS(91)*UV(34)
      JUV(20) = JVS(92)*UV(13)+JVS(93)*UV(16)+JVS(94)*UV(20)+JVS(95)*UV(31)+JVS(97)*UV(34)+JVS(98)*UV(36)
      JUV(21) = JVS(99)*UV(15)+JVS(100)*UV(21)+JVS(101)*UV(22)+JVS(102)*UV(23)+JVS(103)*UV(24)+JVS(104)*UV(26)+JVS(105) 
     &     *UV(30)+JVS(106)*UV(31)+JVS(107)*UV(32)+JVS(108)*UV(33)+JVS(110)*UV(36)
      JUV(22) = JVS(111)*UV(8)+JVS(112)*UV(10)+JVS(113)*UV(15)+JVS(114)*UV(16)+JVS(115)*UV(17)+JVS(116)*UV(19)+JVS(117) 
     &     *UV(20)+JVS(118)*UV(21)+JVS(119)*UV(22)+JVS(120)*UV(23)+JVS(121)*UV(24)+JVS(122)*UV(26)+JVS(123)*UV(27) 
     &     +JVS(124)*UV(28)+JVS(125)*UV(29)+JVS(126)*UV(30)+JVS(127)*UV(31)+JVS(128)*UV(32)+JVS(129)*UV(33)+JVS(130) 
     &     *UV(34)+JVS(131)*UV(35)+JVS(132)*UV(36)
      JUV(23) = JVS(133)*UV(23)+JVS(134)*UV(31)+JVS(135)*UV(32)+JVS(136)*UV(33)+JVS(137)*UV(34)
      JUV(24) = JVS(138)*UV(10)+JVS(139)*UV(15)+JVS(140)*UV(23)+JVS(141)*UV(24)+JVS(142)*UV(26)+JVS(143)*UV(27)+JVS(144) 
     &     *UV(31)+JVS(145)*UV(32)+JVS(146)*UV(33)+JVS(147)*UV(34)+JVS(148)*UV(35)
      JUV(25) = JVS(149)*UV(19)+JVS(150)*UV(20)+JVS(151)*UV(23)+JVS(152)*UV(25)+JVS(153)*UV(26)+JVS(154)*UV(27)+JVS(155) 
     &     *UV(28)+JVS(156)*UV(29)+JVS(157)*UV(30)+JVS(158)*UV(31)+JVS(159)*UV(32)+JVS(160)*UV(33)+JVS(161)*UV(34) 
     &     +JVS(162)*UV(36)
      JUV(26) = JVS(163)*UV(26)+JVS(164)*UV(31)+JVS(165)*UV(32)+JVS(166)*UV(33)+JVS(167)*UV(34)+JVS(168)*UV(35)
      JUV(27) = JVS(169)*UV(26)+JVS(170)*UV(27)+JVS(171)*UV(31)+JVS(172)*UV(32)+JVS(173)*UV(33)+JVS(174)*UV(34)+JVS(175) 
     &     *UV(35)
      JUV(28) = JVS(176)*UV(15)+JVS(177)*UV(19)+JVS(178)*UV(20)+JVS(179)*UV(23)+JVS(180)*UV(24)+JVS(181)*UV(26)+JVS(182) 
     &     *UV(27)+JVS(183)*UV(28)+JVS(184)*UV(31)+JVS(185)*UV(32)+JVS(186)*UV(33)+JVS(187)*UV(34)+JVS(188)*UV(35)
      JUV(29) = JVS(190)*UV(6)+JVS(191)*UV(17)+JVS(192)*UV(20)+JVS(193)*UV(26)+JVS(194)*UV(27)+JVS(195)*UV(28)+JVS(196) 
     &     *UV(29)+JVS(197)*UV(30)+JVS(198)*UV(31)+JVS(199)*UV(32)+JVS(200)*UV(33)+JVS(201)*UV(34)+JVS(202)*UV(35) 
     &     +JVS(203)*UV(36)
      JUV(30) = JVS(204)*UV(4)+JVS(205)*UV(5)+JVS(206)*UV(8)+JVS(207)*UV(10)+JVS(208)*UV(12)+JVS(209)*UV(13)+JVS(210)*UV(15) 
     &     +JVS(211)*UV(16)+JVS(212)*UV(17)+JVS(213)*UV(18)+JVS(214)*UV(19)+JVS(215)*UV(20)+JVS(216)*UV(21)+JVS(217) 
     &     *UV(22)+JVS(218)*UV(23)+JVS(219)*UV(24)+JVS(220)*UV(25)+JVS(221)*UV(26)+JVS(222)*UV(27)+JVS(223)*UV(28) 
     &     +JVS(224)*UV(29)+JVS(225)*UV(30)+JVS(226)*UV(31)+JVS(227)*UV(32)+JVS(228)*UV(33)+JVS(229)*UV(34)+JVS(230) 
     &     *UV(35)+JVS(231)*UV(36)
      JUV(31) = JVS(232)*UV(3)+JVS(233)*UV(4)+JVS(234)*UV(5)+JVS(235)*UV(8)+JVS(236)*UV(10)+JVS(237)*UV(11)+JVS(238)*UV(12) 
     &     +JVS(239)*UV(14)+JVS(240)*UV(16)+JVS(241)*UV(17)+JVS(242)*UV(18)+JVS(243)*UV(19)+JVS(244)*UV(20)+JVS(245) 
     &     *UV(23)+JVS(246)*UV(24)+JVS(247)*UV(25)+JVS(248)*UV(26)+JVS(249)*UV(27)+JVS(250)*UV(28)+JVS(251)*UV(29) 
     &     +JVS(252)*UV(30)+JVS(253)*UV(31)+JVS(254)*UV(32)+JVS(256)*UV(34)+JVS(257)*UV(35)+JVS(258)*UV(36)
      JUV(32) = JVS(259)*UV(3)+JVS(260)*UV(19)+JVS(261)*UV(23)+JVS(262)*UV(25)+JVS(263)*UV(26)+JVS(265)*UV(28)+JVS(269) 
     &     *UV(32)+JVS(270)*UV(33)+JVS(271)*UV(34)+JVS(272)*UV(35)+JVS(273)*UV(36)
      JUV(33) = JVS(274)*UV(9)+JVS(275)*UV(14)+JVS(276)*UV(16)+JVS(277)*UV(23)+JVS(278)*UV(25)+JVS(279)*UV(26)+JVS(280) 
     &     *UV(27)+JVS(281)*UV(28)+JVS(284)*UV(31)+JVS(285)*UV(32)+JVS(286)*UV(33)+JVS(287)*UV(34)+JVS(288)*UV(35) 
     &     +JVS(289)*UV(36)
      JUV(34) = JVS(290)*UV(19)+JVS(291)*UV(20)+JVS(292)*UV(23)+JVS(293)*UV(26)+JVS(294)*UV(27)+JVS(295)*UV(30)+JVS(296) 
     &     *UV(31)+JVS(297)*UV(32)+JVS(299)*UV(34)+JVS(300)*UV(35)+JVS(301)*UV(36)
      JUV(35) = JVS(302)*UV(6)+JVS(303)*UV(7)+JVS(304)*UV(9)+JVS(305)*UV(11)+JVS(306)*UV(12)+JVS(307)*UV(13)+JVS(308)*UV(15) 
     &     +JVS(310)*UV(22)+JVS(311)*UV(23)+JVS(313)*UV(26)+JVS(316)*UV(29)+JVS(317)*UV(30)+JVS(318)*UV(31)+JVS(319) 
     &     *UV(32)+JVS(320)*UV(33)+JVS(321)*UV(34)+JVS(322)*UV(35)+JVS(323)*UV(36)
      JUV(36) = JVS(324)*UV(11)+JVS(325)*UV(13)+JVS(326)*UV(21)+JVS(327)*UV(22)+JVS(330)*UV(26)+JVS(333)*UV(29)+JVS(334) 
     &     *UV(30)+JVS(335)*UV(31)+JVS(336)*UV(32)+JVS(337)*UV(33)+JVS(338)*UV(34)+JVS(339)*UV(35)+JVS(340)*UV(36)
      
      END SUBROUTINE Jac_SP_Vec

C     End of Jac_SP_Vec function
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C     
C     JacTR_SP_Vec - sparse multiplication: sparse Jacobian transposed times vector
C     Arguments :
C     JVS       - sparse Jacobian of variables
C     UV        - User vector for variables
C     JTUV      - Jacobian transposed times user vector
C     
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )

C     JVS - sparse Jacobian of variables
      REAL(kind=dp) :: JVS(LU_NONZERO)
C     UV - User vector for variables
      REAL(kind=dp) :: UV(KPPNSP)
C     JTUV - Jacobian transposed times user vector
      REAL(kind=dp) :: JTUV(KPPNSP)

      JTUV(1) = JVS(1)*UV(1)
      JTUV(2) = JVS(11)*UV(2)
      JTUV(3) = JVS(14)*UV(3)+JVS(232)*UV(31)+JVS(259)*UV(32)
      JTUV(4) = JVS(12)*UV(2)+JVS(16)*UV(4)+JVS(204)*UV(30)+JVS(233)*UV(31)
      JTUV(5) = JVS(18)*UV(5)+JVS(205)*UV(30)+JVS(234)*UV(31)
      JTUV(6) = JVS(21)*UV(6)+JVS(190)*UV(29)+JVS(302)*UV(35)
      JTUV(7) = JVS(2)*UV(1)+JVS(24)*UV(7)+JVS(303)*UV(35)
      JTUV(8) = JVS(29)*UV(8)+JVS(44)*UV(13)+JVS(62)*UV(16)+JVS(111)*UV(22)+JVS(206)*UV(30)+JVS(235)*UV(31)
      JTUV(9) = JVS(31)*UV(9)+JVS(49)*UV(14)+JVS(274)*UV(33)+JVS(304)*UV(35)
      JTUV(10) = JVS(34)*UV(10)+JVS(45)*UV(13)+JVS(63)*UV(16)+JVS(69)*UV(17)+JVS(112)*UV(22)+JVS(138)*UV(24)+JVS(207)*UV(30) 
     &     +JVS(236)*UV(31)
      JTUV(11) = JVS(36)*UV(11)+JVS(237)*UV(31)+JVS(305)*UV(35)+JVS(324)*UV(36)
      JTUV(12) = JVS(40)*UV(12)+JVS(208)*UV(30)+JVS(238)*UV(31)+JVS(306)*UV(35)
      JTUV(13) = JVS(3)*UV(1)+JVS(46)*UV(13)+JVS(64)*UV(16)+JVS(92)*UV(20)+JVS(209)*UV(30)+JVS(307)*UV(35)+JVS(325)*UV(36)
      JTUV(14) = JVS(50)*UV(14)+JVS(239)*UV(31)+JVS(275)*UV(33)
      JTUV(15) = JVS(4)*UV(1)+JVS(58)*UV(15)+JVS(99)*UV(21)+JVS(113)*UV(22)+JVS(139)*UV(24)+JVS(176)*UV(28)+JVS(210)*UV(30) 
     &     +JVS(308)*UV(35)
      JTUV(16) = JVS(25)*UV(7)+JVS(51)*UV(14)+JVS(65)*UV(16)+JVS(93)*UV(20)+JVS(114)*UV(22)+JVS(211)*UV(30)+JVS(240)*UV(31) 
     &     +JVS(276)*UV(33)
      JTUV(17) = JVS(70)*UV(17)+JVS(75)*UV(18)+JVS(115)*UV(22)+JVS(191)*UV(29)+JVS(212)*UV(30)+JVS(241)*UV(31)
      JTUV(18) = JVS(76)*UV(18)+JVS(213)*UV(30)+JVS(242)*UV(31)
      JTUV(19) = JVS(77)*UV(18)+JVS(88)*UV(19)+JVS(116)*UV(22)+JVS(149)*UV(25)+JVS(177)*UV(28)+JVS(214)*UV(30)+JVS(243) 
     &     *UV(31)+JVS(260)*UV(32)+JVS(290)*UV(34)
      JTUV(20) = JVS(71)*UV(17)+JVS(78)*UV(18)+JVS(94)*UV(20)+JVS(117)*UV(22)+JVS(150)*UV(25)+JVS(178)*UV(28)+JVS(192) 
     &     *UV(29)+JVS(215)*UV(30)+JVS(244)*UV(31)+JVS(291)*UV(34)
      JTUV(21) = JVS(5)*UV(1)+JVS(100)*UV(21)+JVS(118)*UV(22)+JVS(216)*UV(30)+JVS(326)*UV(36)
      JTUV(22) = JVS(101)*UV(21)+JVS(119)*UV(22)+JVS(217)*UV(30)+JVS(310)*UV(35)+JVS(327)*UV(36)
      JTUV(23) = JVS(79)*UV(18)+JVS(102)*UV(21)+JVS(120)*UV(22)+JVS(133)*UV(23)+JVS(140)*UV(24)+JVS(151)*UV(25)+JVS(179) 
     &     *UV(28)+JVS(218)*UV(30)+JVS(245)*UV(31)+JVS(261)*UV(32)+JVS(277)*UV(33)+JVS(292)*UV(34)+JVS(311)*UV(35)
      JTUV(24) = JVS(59)*UV(15)+JVS(103)*UV(21)+JVS(121)*UV(22)+JVS(141)*UV(24)+JVS(180)*UV(28)+JVS(219)*UV(30)+JVS(246) 
     &     *UV(31)
      JTUV(25) = JVS(52)*UV(14)+JVS(80)*UV(18)+JVS(152)*UV(25)+JVS(220)*UV(30)+JVS(247)*UV(31)+JVS(262)*UV(32)+JVS(278) 
     &     *UV(33)
      JTUV(26) = JVS(6)*UV(1)+JVS(81)*UV(18)+JVS(104)*UV(21)+JVS(122)*UV(22)+JVS(142)*UV(24)+JVS(153)*UV(25)+JVS(163)*UV(26) 
     &     +JVS(169)*UV(27)+JVS(181)*UV(28)+JVS(193)*UV(29)+JVS(221)*UV(30)+JVS(248)*UV(31)+JVS(263)*UV(32)+JVS(279) 
     &     *UV(33)+JVS(293)*UV(34)+JVS(313)*UV(35)+JVS(330)*UV(36)
      JTUV(27) = JVS(7)*UV(1)+JVS(53)*UV(14)+JVS(72)*UV(17)+JVS(82)*UV(18)+JVS(123)*UV(22)+JVS(143)*UV(24)+JVS(154)*UV(25) 
     &     +JVS(170)*UV(27)+JVS(182)*UV(28)+JVS(194)*UV(29)+JVS(222)*UV(30)+JVS(249)*UV(31)+JVS(280)*UV(33)+JVS(294) 
     &     *UV(34)
      JTUV(28) = JVS(54)*UV(14)+JVS(83)*UV(18)+JVS(124)*UV(22)+JVS(155)*UV(25)+JVS(183)*UV(28)+JVS(195)*UV(29)+JVS(223) 
     &     *UV(30)+JVS(250)*UV(31)+JVS(265)*UV(32)+JVS(281)*UV(33)
      JTUV(29) = JVS(22)*UV(6)+JVS(125)*UV(22)+JVS(156)*UV(25)+JVS(196)*UV(29)+JVS(224)*UV(30)+JVS(251)*UV(31)+JVS(316) 
     &     *UV(35)+JVS(333)*UV(36)
      JTUV(30) = JVS(19)*UV(5)+JVS(41)*UV(12)+JVS(105)*UV(21)+JVS(126)*UV(22)+JVS(157)*UV(25)+JVS(197)*UV(29)+JVS(225) 
     &     *UV(30)+JVS(252)*UV(31)+JVS(295)*UV(34)+JVS(317)*UV(35)+JVS(334)*UV(36)
      JTUV(31) = JVS(13)*UV(2)+JVS(17)*UV(4)+JVS(20)*UV(5)+JVS(26)*UV(7)+JVS(30)*UV(8)+JVS(35)*UV(10)+JVS(37)*UV(11)+JVS(42) 
     &     *UV(12)+JVS(47)*UV(13)+JVS(55)*UV(14)+JVS(60)*UV(15)+JVS(66)*UV(16)+JVS(73)*UV(17)+JVS(84)*UV(18)+JVS(89) 
     &     *UV(19)+JVS(95)*UV(20)+JVS(106)*UV(21)+JVS(127)*UV(22)+JVS(134)*UV(23)+JVS(144)*UV(24)+JVS(158)*UV(25) 
     &     +JVS(164)*UV(26)+JVS(171)*UV(27)+JVS(184)*UV(28)+JVS(198)*UV(29)+JVS(226)*UV(30)+JVS(253)*UV(31)+JVS(284) 
     &     *UV(33)+JVS(296)*UV(34)+JVS(318)*UV(35)+JVS(335)*UV(36)
      JTUV(32) = JVS(85)*UV(18)+JVS(90)*UV(19)+JVS(107)*UV(21)+JVS(128)*UV(22)+JVS(135)*UV(23)+JVS(145)*UV(24)+JVS(159) 
     &     *UV(25)+JVS(165)*UV(26)+JVS(172)*UV(27)+JVS(185)*UV(28)+JVS(199)*UV(29)+JVS(227)*UV(30)+JVS(254)*UV(31) 
     &     +JVS(269)*UV(32)+JVS(285)*UV(33)+JVS(297)*UV(34)+JVS(319)*UV(35)+JVS(336)*UV(36)
      JTUV(33) = JVS(8)*UV(1)+JVS(27)*UV(7)+JVS(32)*UV(9)+JVS(56)*UV(14)+JVS(67)*UV(16)+JVS(86)*UV(18)+JVS(108)*UV(21) 
     &     +JVS(129)*UV(22)+JVS(136)*UV(23)+JVS(146)*UV(24)+JVS(160)*UV(25)+JVS(166)*UV(26)+JVS(173)*UV(27)+JVS(186) 
     &     *UV(28)+JVS(200)*UV(29)+JVS(228)*UV(30)+JVS(270)*UV(32)+JVS(286)*UV(33)+JVS(320)*UV(35)+JVS(337)*UV(36)
      JTUV(34) = JVS(15)*UV(3)+JVS(74)*UV(17)+JVS(87)*UV(18)+JVS(91)*UV(19)+JVS(97)*UV(20)+JVS(130)*UV(22)+JVS(137)*UV(23) 
     &     +JVS(147)*UV(24)+JVS(161)*UV(25)+JVS(167)*UV(26)+JVS(174)*UV(27)+JVS(187)*UV(28)+JVS(201)*UV(29)+JVS(229) 
     &     *UV(30)+JVS(256)*UV(31)+JVS(271)*UV(32)+JVS(287)*UV(33)+JVS(299)*UV(34)+JVS(321)*UV(35)+JVS(338)*UV(36)
      JTUV(35) = JVS(9)*UV(1)+JVS(23)*UV(6)+JVS(28)*UV(7)+JVS(33)*UV(9)+JVS(38)*UV(11)+JVS(43)*UV(12)+JVS(57)*UV(14)+JVS(61) 
     &     *UV(15)+JVS(131)*UV(22)+JVS(148)*UV(24)+JVS(168)*UV(26)+JVS(175)*UV(27)+JVS(188)*UV(28)+JVS(202)*UV(29) 
     &     +JVS(230)*UV(30)+JVS(257)*UV(31)+JVS(272)*UV(32)+JVS(288)*UV(33)+JVS(300)*UV(34)+JVS(322)*UV(35)+JVS(339) 
     &     *UV(36)
      JTUV(36) = JVS(10)*UV(1)+JVS(39)*UV(11)+JVS(48)*UV(13)+JVS(98)*UV(20)+JVS(110)*UV(21)+JVS(132)*UV(22)+JVS(162)*UV(25) 
     &     +JVS(203)*UV(29)+JVS(231)*UV(30)+JVS(258)*UV(31)+JVS(273)*UV(32)+JVS(289)*UV(33)+JVS(301)*UV(34)+JVS(323) 
     &     *UV(35)+JVS(340)*UV(36)
      
      END SUBROUTINE JacTR_SP_Vec

C     End of JacTR_SP_Vec function
C     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



      END MODULE KPP_Jacobian

